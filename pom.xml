<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.spt-development</groupId>
	<artifactId>spt-development-micrometer-tracing-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>spt-development-micrometer-tracing-demo</name>
	<description>Demo project for SPT Development projects integrated with Micrometer tracing</description>

	<properties>
		<maven.compiler.release>17</maven.compiler.release>

		<!-- Dependency versions -->
		<commons-collections.version>4.4</commons-collections.version>
		<findbugs-jsr305.version>3.0.2</findbugs-jsr305.version>
		<spt-development-audit-spring-boot.version>3.1.2</spt-development-audit-spring-boot.version>
		<spt-development-logging-spring-boot.version>3.1.2</spt-development-logging-spring-boot.version>

		<!-- Test dependency versions -->
		<awaitility.version>4.2.0</awaitility.version>
		<cucumber.version>7.13.0</cucumber.version>
		<junit-platform.version>1.10.0</junit-platform.version>
		<spt-development-test.version>3.0.8</spt-development-test.version>

		<!-- Plugin versions -->
		<checkstyle-maven-plugin.version>3.1.2</checkstyle-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
		<maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>

		<!-- Plugin dependencies -->
		<checkstyle.version>9.0.1</checkstyle.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Test BOMs -->
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-bom</artifactId>
				<version>${cucumber.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Dependencies added to avoid dependency convergence errors -->
			<!-- None -->
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-artemis</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>

		<!-- Spring third-party dependencies -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-jakarta-server</artifactId>
			<scope>runtime</scope>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>

		<!-- SPT dependencies -->
		<dependency>
			<groupId>com.spt-development</groupId>
			<artifactId>spt-development-audit-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.spt-development</groupId>
					<artifactId>spt-development-cid</artifactId>
				</exclusion>
			</exclusions>
			<version>${spt-development-audit-spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>com.spt-development</groupId>
			<artifactId>spt-development-logging-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.spt-development</groupId>
					<artifactId>spt-development-cid</artifactId>
				</exclusion>
			</exclusions>
			<version>${spt-development-logging-spring-boot.version}</version>
		</dependency>

		<!-- Third party dependencies -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>${findbugs-jsr305.version}</version>
		</dependency>

		<!-- Spring test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- Version defined in parent dependencyManagement section -->
		</dependency>

		<!-- SPT test dependencies -->
		<dependency>
			<groupId>com.spt-development</groupId>
			<artifactId>spt-development-test</artifactId>
			<version>${spt-development-test.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Third-party test dependencies -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-core</artifactId>
			<scope>test</scope>
			<!-- Version defined in cucumber bom, imported in dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
			<!-- Version defined in cucumber bom, imported in dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<scope>test</scope>
			<!-- Version defined in cucumber bom, imported in dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
			<!-- Version defined in cucumber bom, imported in dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
			<!-- Version defined in cucumber bom, imported in dependencyManagement section -->
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<version>${junit-platform.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<showWarnings>true</showWarnings>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Xlint:-processing</arg>
						<arg>-Werror</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<phase>compile</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<dependencyConvergence/>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-maven-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<configLocation>spt_checks.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<disableXmlReport>true</disableXmlReport>
					<trimStackTrace>false</trimStackTrace>
					<!--
                         classesDirectory is required to work around a bug that is discussed at
                         https://github.com/spring-projects/spring-boot/issues/6254. There are a number of different
                         workarounds, but this seems to be the cleanest.
                      -->
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<!-- Version defined in spring-boot-parent pluginManagement section -->
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/*IT.java</exclude>
					</excludes>
				</configuration>
				<!-- Version defined in spring-boot-parent pluginManagement section -->
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<outputFile>${project.build.directory}/dependency-versions.txt</outputFile>
					<rulesUri>file:///${project.basedir}/maven-version-rules.xml</rulesUri>
				</configuration>
				<version>${versions-maven-plugin.version}</version>
			</plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
				<!-- Version defined in spring-boot-parent pluginManagement section -->
            </plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>before-unit-test-execution</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<includes>
								<include>com/spt/development/demo/**</include>
							</includes>
							<destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>after-unit-test-execution</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>before-integration-test-execution</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<includes>
								<include>com/spt/development/demo/**</include>
							</includes>
							<destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>after-integration-test-execution</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/jacoco-output/</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>create-merged-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>1.0</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
							<excludes>
								<exclude>com/spt/development/demo/DemoApplication.class</exclude>
							</excludes>
							<dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
